---
openapi: 3.0.1
info:
  title: OSCAL REST
  description: |
    A draft proposal from [Easy Dynamics](https://www.easydynamics.com) of a REST API specification for interacting
      with [OSCAL](https://pages.nist.gov/OSCAL/) models.

    Standardized data models like OSCAL lay the groundwork for interoperability of systems, and an ecosystem of
    meaningful integrations can be brought to life through a standardized REST API. That interface needs to define
    simple CRUD operations, but should also describe how to manipulate relationships and make partial changes.

    Such an API will likely see the most success across various vendors and projects when maintained by a
    standards body or community, and we're looking to get that conversation started with this effort.

    ## Identifier Scope
    Note that all object identifiers are **scoped to the system** implementing the REST API
      and are expected to be unique.

    <details>
      <summary>Example</summary>
      To associate a Party with a known Component Definition with a UUID you might:
      1. Search for the Party:
          ```
          GET /parties/search?query=bob
          ```
          ```
          [
            {
              "uuid": "d834ed5e-9652-4b78-87e7-a9f8686f4e60",
              "type": "person",
              "name": "Bob Johnson"
            }
          ]
          ```
      2. Use the found Party's ID to associate with the component definition:
          ```
          PUT /component-definitions/599b6fa5-3e18-4580-bd8f-8a181776c6e8/parties/d834ed5e-9652-4b78-87e7-a9f8686f4e60
          ```
    </details>

    ## Partial Payloads in PATCH Requests
    A `PATCH` should be used when an existing object needs a partial modification. It accepts a partial
    payload with the updated fields and corresponding field names, then modifies the specified
    fields accordingly. Additionally, it is solely additive when updating lists and will not replace
    existing list items. In most cases, a `PATCH` is more convenient than a `PUT`, which only accepts
    a full payload to completely replace the existing object with new updates.

    All updates to 'root' OSCAL objects via `PATCH` requests should accept a partial payload containing
    only the changed data and the entire updated object should be returned.

    The UUID of the root object must not change in the payload and implementations should throw an error
    if such a request is made.
    <details>
      <summary>Example</summary>
      Example request:
      ```
      PATCH /system-security-plans/cff8385f-108e-40a5-8f7a-82f3dc0eaba8
      {
        "system-security-plan": {
          "uuid": "cff8385f-108e-40a5-8f7a-82f3dc0eaba8",
          "metadata": {
            "title": "Some New Title"
            "revisions": [
              { "version": "220220517" }
            ]
          }
        }
      }
      ```
      In this example, the title is being updated and the version is being added to the list of
      revisions. No other changes are being made to the original metadata object, so the rest of its
      fields will remain the same. The list of revisions will still contain its previous items,
      along with the new version item.
    </details>
  contact:
    email: info@easydynamics.com
  version: 0.1.0
externalDocs:
  description: Find out more about OSCAL
  url: https://pages.nist.gov/OSCAL
servers:
  - url: http://localhost:8080/oscal/v1
tags:
  - name: OSCAL Component Definition
    externalDocs:
      description: Find out more
      url: https://pages.nist.gov/OSCAL/documentation/schema/implementation-layer/component/
  - name: OSCAL Profile
    externalDocs:
      description: Find out more
      url: https://pages.nist.gov/OSCAL/documentation/schema/profile-layer/profile/
  - name: OSCAL System Security Plan
    externalDocs:
      description: Find out more
      url: https://pages.nist.gov/OSCAL/documentation/schema/implementation-layer/ssp/
  - name: OSCAL Catalog
    externalDocs:
      description: Find out more
      url: https://pages.nist.gov/OSCAL/documentation/schema/catalog-layer/catalog/
  - name: OSCAL Party
    externalDocs:
      description: Find out more
      url: https://pages.nist.gov/OSCAL
paths:
  /catalogs:
    get:
      tags:
        - OSCAL Catalog
      summary: Returns all OSCAL control catalogs
      operationId: getCatalogs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALCatalog"
      security:
        - oscal_auth:
            - read:catalogs
    post:
      tags:
        - OSCAL Catalog
      summary: Adds a new OSCAL control catalog
      operationId: addCatalog
      requestBody:
        description: OSCAL catalog object to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALCatalog"
          multipart/form-data:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: binary
                fileName:
                  type: string
                  format: binary
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
        - oscal_auth:
            - write:catalogs
            - read:catalogs
      x-codegen-request-body-name: body
  /catalogs/{catalogId}:
    get:
      tags:
        - OSCAL Catalog
      summary: Finds an OSCAL control catalog by ID
      description: Returns a single OSCAL control catalog
      operationId: getCatalogById
      parameters:
        - name: catalogId
          in: path
          description: ID of catalog to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALCatalog"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Catalog not found
          content: {}
      security:
        - oscal_auth:
            - read:catalogs
    patch:
      tags:
        - OSCAL Catalog
      summary: Updates an existing OSCAL control catalog
      operationId: updateCatalog
      parameters:
        - name: catalogId
          in: path
          description: ID of catalog to return
          required: true
          schema:
            type: string
      requestBody:
        description: Catalog object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALCatalogUpdateExample"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Catalog not found
          content: {}
        405:
          description: Validation exception
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:catalogs
            - read:catalogs
      x-codegen-request-body-name: body
    put:
      tags:
        - OSCAL Catalog
      summary: Replaces an existing OSCAL catalog
      operationId: replaceCatalog
      parameters:
        - name: catalogId
          in: path
          description: ID of catalog to replace.
          required: true
          schema:
            type: string
      requestBody:
        description: Catalog object to be replaced.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALCatalog"
        required: true
      responses:
        200:
          description: Updated catalog
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALCatalog"
        400:
          description: Bad Request
        404:
          description: Catalog not found
        409:
          description: Conflict with current state
        415:
          description: Unsupported media type
      security:
        - oscal_auth:
            - write:catalogs
            - read:catalogs
      x-codegen-request-body-name: body
    delete:
      tags:
        - OSCAL Catalog
      summary: Deletes an OSCAL control catalog
      operationId: deleteCatalog
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: catalogId
          in: path
          description: Catalog ID to delete
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Catalog not found
          content: {}
      security:
        - oscal_auth:
            - write:catalogs
            - read:catalogs
  /catalogs/search:
    get:
      tags:
        - OSCAL Catalog
      summary: Searches for OSCAL control catalogs by name
      operationId: findCatalogsByName
      parameters:
        - name: query
          in: query
          description: Terms to search for in catalog names
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALCatalog"
        400:
          description: Invalid status value
          content: {}
      security:
        - oscal_auth:
            - read:catalogs
  /profiles:
    get:
      tags:
        - OSCAL Profile
      summary: Returns all OSCAL profiles
      operationId: getProfiles
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALProfile"
      security:
        - oscal_auth:
            - read:profiles
    patch:
      tags:
        - OSCAL Profile
      summary: Updates an existing OSCAL profile
      operationId: updateProfile
      requestBody:
        description: Catalog object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALProfileUpdateExample"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Catalog not found
          content: {}
        405:
          description: Validation exception
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
      x-codegen-request-body-name: body
    post:
      tags:
        - OSCAL Profile
      summary: Adds a new OSCAL profile
      operationId: addProfile
      requestBody:
        description: OSCAL profile to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALProfile"
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
      x-codegen-request-body-name: body
  /profiles/{profileId}:
    get:
      tags:
        - OSCAL Profile
      summary: Finds an OSCAL profile by ID
      description: Returns a single OSCAL profile
      operationId: getProfileById
      parameters:
        - name: profileId
          in: path
          description: ID of profile to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALProfile"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile not found
          content: {}
      security:
        - oscal_auth:
            - read:profiles
    put:
      tags:
        - OSCAL Profile
      summary: Replaces an existing OSCAL profile
      operationId: replaceProfile
      parameters:
        - name: profileId
          in: path
          description: ID of profile to replace.
          required: true
          schema:
            type: string
      requestBody:
        description: Profile object to be replaced.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALProfile"
        required: true
      responses:
        200:
          description: Updated profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALProfile"
        400:
          description: Bad Request
        404:
          description: Profile not found
        409:
          description: Conflict with current state
        415:
          description: Unsupported media type
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
      x-codegen-request-body-name: body
    delete:
      tags:
        - OSCAL Profile
      summary: Deletes an OSCAL profile
      operationId: deleteProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID to delete
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/{profileId}/imported-catalogs/{catalogId}:
    put:
      tags:
        - OSCAL Profile
      summary: Defines a catalog import in an OSCAL profile
      operationId: addCatalogToProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          description: Catalog ID to be imported into the profile
          required: true
          schema:
            type: string
      requestBody:
        description: Further description of the controls imported
        content:
          application/json:
            schema:
              type: object
              properties:
                include-controls:
                  type: array
                  items:
                    type: object
                    properties:
                      with-ids:
                        type: array
                        items:
                          type: string
        required: false
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or catalog not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
    delete:
      tags:
        - OSCAL Profile
      summary: Removes a catalog from an OSCAL profile imports
      description: |
        Removes the given catalog from the given profile.

        This should also result in references under other parts of the schema being removed.
      operationId: removeCatalogfromProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          description: Catalog ID to be removed from the profile imports
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or catalog not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/{profileId}/imported-profiles/{importProfileId}:
    put:
      tags:
        - OSCAL Profile
      summary: Defines the import of another profile in an OSCAL profile
      operationId: addProfileToProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: importProfileId
          in: path
          description: Other profile ID to be defined as an import in the profile
          required: true
          schema:
            type: string
      requestBody:
        description: Further description of the controls imported
        content:
          application/json:
            schema:
              type: object
              properties:
                include-controls:
                  type: array
                  items:
                    type: object
                    properties:
                      with-ids:
                        type: array
                        items:
                          type: string
        required: false
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or import profile not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
    delete:
      tags:
        - OSCAL Profile
      summary: Removes a another profile from an OSCAL profile imports
      description: |
        Removes the given other profile from the given profile.

        This should also result in references under other parts of the schema being removed.
      operationId: removeProfilefromProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: importProfileId
          in: path
          description: Other profile ID to be removed from the profile imports
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or import profile not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/{profileId}/roles:
    post:
      tags:
        - OSCAL Profile
      summary: Adds a new role to an OSCAL profile
      operationId: addRoleToProfile
      requestBody:
        description: OSCAL role to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALRole"
        required: true
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/{profileId}/roles/{roleId}:
    delete:
      tags:
        - OSCAL Profile
      summary: Removes a role from an OSCAL profile
      description: |
        Removes the given role from the given profile.

        This should also result in references under other parts of the schema such as responsible parties being removed.
      operationId: removeRolefromProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Role ID to be removed from the profile
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or role not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/{profileId}/parties/{partyId}:
    put:
      tags:
        - OSCAL Profile
      summary: Associates a party with an OSCAL profile
      operationId: addPartyToProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be associated with the profile
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or party not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
    delete:
      tags:
        - OSCAL Profile
      summary: Removes a party from an OSCAL profile
      description: |
        Removes the given party from the given profile.

        This should also result in references under other parts of the schema such as responsible roles being removed.
      operationId: removePartyfromProfile
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be removed with the profile
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile or party not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/{profileId}/responsible-parties/{roleId}/parties/{partyId}:
    post:
      tags:
        - OSCAL Profile
      summary: Associates a party with role within an OSCAL profile
      operationId: addPartyToProfileRole
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Role ID for the party to be associated with within the profile
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be added to the role within the profile
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile, role, or party not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
    delete:
      tags:
        - OSCAL Profile
      summary: Removes a party from a role within an OSCAL profile
      operationId: removePartyfromProfileRole
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile ID
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Role ID within the profile that the party should be removed from
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be removed from the role within the profile
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile, role, or party not found
          content: {}
      security:
        - oscal_auth:
            - write:profiles
            - read:profiles
  /profiles/search:
    get:
      tags:
        - OSCAL Profile
      summary: Searches for OSCAL profiles by name
      operationId: findProfilesByName
      parameters:
        - name: query
          in: query
          description: Terms to search for in profile names
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALProfile"
        400:
          description: Invalid status value
          content: {}
      security:
        - oscal_auth:
            - read:profiles
  /component-definitions:
    get:
      tags:
        - OSCAL Component Definition
      summary: Returns all OSCAL component definitions
      operationId: getComponentDefinitions
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALComponentDefinition"
      security:
        - oscal_auth:
            - read:componentDefinitions
    post:
      tags:
        - OSCAL Component Definition
      summary: Adds a new OSCAL component definition
      operationId: addComponentDefinition
      requestBody:
        description: OSCAL component definition to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinition"
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
      x-codegen-request-body-name: body
  /component-definitions/{componentDefinitionId}:
    get:
      tags:
        - OSCAL Component Definition
      summary: Finds an OSCAL component definition by ID
      description: Returns a single OSCAL component definition
      operationId: getComponentDefinitionById
      parameters:
        - name: componentDefinitionId
          in: path
          description: ID of component definition to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALComponentDefinition"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition not found
          content: {}
      security:
        - oscal_auth:
            - read:componentDefinitions
    patch:
      tags:
        - OSCAL Component Definition
      summary: Updates an existing OSCAL component definition
      operationId: updateComponentDefinition
      parameters:
        - name: componentDefinitionId
          in: path
          description: ID of component definition to return
          required: true
          schema:
            type: string
      requestBody:
        description: Component definition to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinitionUpdateExample"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition not found
          content: {}
        405:
          description: Validation exception
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
      x-codegen-request-body-name: body
    put:
      tags:
        - OSCAL Component Definition
      summary: Replaces an existing OSCAL component definition
      operationId: replaceComponentDefinition
      parameters:
        - name: componentDefinitionId
          in: path
          description: ID of component definition to replace.
          required: true
          schema:
            type: string
      requestBody:
        description: Component definition object to be replaced.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinition"
        required: true
      responses:
        200:
          description: Updated component definition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALComponentDefinition"
        400:
          description: Bad Request
        404:
          description: Component definition not found
        409:
          description: Conflict with current state
        415:
          description: Unsupported media type
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
      x-codegen-request-body-name: body
    delete:
      tags:
        - OSCAL Component Definition
      summary: Deletes an OSCAL component definition
      operationId: deleteComponentDefinition
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID to delete
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/roles:
    post:
      tags:
        - OSCAL Component Definition
      summary: Adds a new role to an OSCAL component definition
      operationId: addRoleToComponentDefinition
      requestBody:
        description: OSCAL role to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALRole"
        required: true
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/roles/{roleId}:
    delete:
      tags:
        - OSCAL Component Definition
      summary: Removes a role from an OSCAL component definition
      description: |
        Removes the given role from the given component definition.

        This should also result in references under other parts of the schema such as responsible parties being removed.
      operationId: removeRoleFromComponentDefinition
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component Definition ID
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Role ID to be removed from the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition or role not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/parties/{partyId}:
    put:
      tags:
        - OSCAL Component Definition
      summary: Associates a party with an OSCAL component definition
      operationId: addPartyToComponentDefinition
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component Definition ID
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be associated with the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition or party not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
    delete:
      tags:
        - OSCAL Component Definition
      summary: Removes a party from an OSCAL component definition
      description: |
        Removes the given party from the given component definition.

        This should also result in references under other parts of the schema such as
          component responsible roles being removed.
      operationId: removePartyFromComponentDefinition
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component Definition ID
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be associated with the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition or party not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/responsible-parties/{roleId}/parties/{partyId}:
    post:
      tags:
        - OSCAL Component Definition
      summary: Associates a party with role within an OSCAL component definition
      operationId: addPartyToComponentDefinitionRole
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component Definition ID
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Role ID for the party to be associated with within the component definition
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be added to the role within the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition, role, or party not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
    delete:
      tags:
        - OSCAL Component Definition
      summary: Removes a party from a role within an OSCAL component definition
      operationId: removePartyFromComponentDefinitionRole
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Role ID within the component definition the party should be removed from
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be removed from the role within the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition, role, or party not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/components:
    post:
      tags:
        - OSCAL Component Definition
      summary: Adds a new component to an OSCAL component definition
      operationId: addComponentToComponentDefinition
      requestBody:
        description: OSCAL component to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinitionComponent"
        required: true
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/components/{componentId}:
    patch:
      tags:
        - OSCAL Component Definition
      summary: Updates an existing component in an OSCAL component definition
      operationId: updateComponentInComponentDefinition
      requestBody:
        description: OSCAL component to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinitionComponent"
        required: true
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be updated in the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
    delete:
      tags:
        - OSCAL Component Definition
      summary: Removes a component from an OSCAL component definition
      operationId: removeComponentFromComponentDefinition
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component Definition ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be removed from the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition or component not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/components/{componentId}/control-implementations:
    post:
      tags:
        - OSCAL Component Definition
      summary: Adds a new control implementation to a component in an OSCAL component definition
      operationId: addComponentControlImplementationToComponentDefinition
      requestBody:
        description: OSCAL component control implementation to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinitionComponentControlImplementation"
        required: true
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be updated in the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition or component not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/{componentDefinitionId}/components/{componentId}/control-implementations/{componentControlImplementationId}:
    patch:
      tags:
        - OSCAL Component Definition
      summary: Updates an existing control implementation in a component in an OSCAL component definition
      operationId: updateComponentControlImplementationInComponentDefinition
      requestBody:
        description: OSCAL component control implementation to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALComponentDefinitionComponentControlImplementation"
        required: true
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component definition ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be updated in the component definition
          required: true
          schema:
            type: string
        - name: componentControlImplementationId
          in: path
          description: Component control implementation ID to be updated in the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition, component, or control implementation not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
    delete:
      tags:
        - OSCAL Component Definition
      summary: Removes a component control implementation from an OSCAL component definition
      operationId: removeComponentControlImplementationFromComponentDefinition
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: componentDefinitionId
          in: path
          description: Component Definition ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be removed from the component definition
          required: true
          schema:
            type: string
        - name: componentControlImplementationId
          in: path
          description: Component control implementation ID to be removed from the component definition
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Component definition, component, or control implementation not found
          content: {}
      security:
        - oscal_auth:
            - write:componentDefinitions
            - read:componentDefinitions
  /component-definitions/search:
    get:
      tags:
        - OSCAL Component Definition
      summary: Searches for OSCAL component definitions by name
      operationId: findComponentDefinitionsByName
      parameters:
        - name: query
          in: query
          description: Terms to search for in component definition names
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALComponentDefinition"
        400:
          description: Invalid status value
          content: {}
      security:
        - oscal_auth:
            - read:componentDefinitions
  /system-security-plans:
    get:
      tags:
        - OSCAL System Security Plan
      summary: Returns all OSCAL system security plans
      operationId: getSsps
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALSsp"
      security:
        - oscal_auth:
            - read:ssps
    post:
      tags:
        - OSCAL System Security Plan
      summary: Adds a new OSCAL system security plan
      operationId: addSsp
      requestBody:
        description: OSCAL system security plan object to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALSsp"
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
      x-codegen-request-body-name: body
  /system-security-plans/{sspId}:
    get:
      tags:
        - OSCAL System Security Plan
      summary: Finds an OSCAL system security plan by ID
      description: Returns a single OSCAL system security plan
      operationId: getSspById
      parameters:
        - name: sspId
          in: path
          description: ID of system security plan to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALSsp"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan not found
          content: {}
      security:
        - oscal_auth:
            - read:ssps
    patch:
      tags:
        - OSCAL System Security Plan
      summary: Updates an existing OSCAL system security plan
      operationId: updateSsp
      parameters:
        - name: sspId
          in: path
          description: ID of system security plan to return
          required: true
          schema:
            type: string
      requestBody:
        description: System security plan object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALSspUpdateExample"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan not found
          content: {}
        405:
          description: Validation exception
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
      x-codegen-request-body-name: body
    put:
      tags:
        - OSCAL System Security Plan
      summary: Replaces an existing OSCAL system security plan
      operationId: replaceSsp
      parameters:
        - name: sspId
          in: path
          description: ID of system security plan to replace.
          required: true
          schema:
            type: string
      requestBody:
        description: System security plan object to be replaced.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALSsp"
        required: true
      responses:
        200:
          description: Updated system security plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALSsp"
        400:
          description: Bad Request
        404:
          description: System security plan not found
        409:
          description: Conflict with current state
        415:
          description: Unsupported media type
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
      x-codegen-request-body-name: body
    delete:
      tags:
        - OSCAL System Security Plan
      summary: Deletes an OSCAL system security plan
      operationId: deleteSsp
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: sspId
          in: path
          description: System security plan ID to delete
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan not found
          content: {}
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
  /system-security-plans/{sspId}/components/{componentId}:
    put:
      tags:
        - OSCAL System Security Plan
      summary: Associates a component with an OSCAL system security plan
      description: Adds the given component to the components within the given system
       security plan's system-implementation.
      operationId: addComponentToSsp
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: sspId
          in: path
          description: System security plan ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be associated with SSP
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan or component not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
    delete:
      tags:
        - OSCAL System Security Plan
      summary: Removes a component from an OSCAL system security plan
      description: |
        Removes the given component from the components within the given system security plan's system-implementation.

        This should also result in references under other parts of the schema such as inventory-items being removed.
      operationId: removeComponentfromSsp
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: sspId
          in: path
          description: System security plan ID
          required: true
          schema:
            type: string
        - name: componentId
          in: path
          description: Component ID to be associated with SSP
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan or component not found
          content: {}
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
  /system-security-plans/{sspId}/parties/{partyId}:
    put:
      tags:
        - OSCAL System Security Plan
      summary: Associates a party with an OSCAL system security plan
      operationId: addPartyToSsp
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: sspId
          in: path
          description: System security plan ID
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be associated with SSP
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan or party not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
    delete:
      tags:
        - OSCAL System Security Plan
      summary: Removes a party from an OSCAL system security plan
      operationId: removePartyfromSsp
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: sspId
          in: path
          description: System security plan ID
          required: true
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to be associated with SSP
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan or party not found
          content: {}
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
  /system-security-plans/{sspId}/control-implementation/implemented-requirements:
    post:
      tags:
        - OSCAL System Security Plan
      summary: Add an implemented requirement to an OSCAL system security plan
      operationId: addImplementedRequirementToSsp
      requestBody:
        description: Implemented requirement to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALImplementedRequirement"
        required: true
      parameters:
        - name: sspId
          in: path
          description: System security plan ID
          required: true
          schema:
            type: string
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALImplementedRequirement"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan not found
          content: {}
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
  /system-security-plans/{sspId}/control-implementation/implemented-requirements/{implementedRequirementId}:
    put:
      tags:
        - OSCAL System Security Plan
      summary: Updates an implemented requirement in an OSCAL system security plan
      operationId: updateImplementedRequirementOfSsp
      requestBody:
        description: Implemented requirement to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALImplementedRequirement"
        required: true
      parameters:
        - name: sspId
          in: path
          description: System security plan ID
          required: true
          schema:
            type: string
        - name: implementedRequirementId
          in: path
          description: ID of implemented requirement to be updated
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALImplementedRequirement"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: System security plan or implemented requirement not found
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:ssps
            - read:ssps
  /system-security-plans/search:
    get:
      tags:
        - OSCAL System Security Plan
      summary: Searches for OSCAL system security plans by name
      operationId: findSspsByName
      parameters:
        - name: query
          in: query
          description: Terms to search for in system security plan names
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALSsp"
        400:
          description: Invalid status value
          content: {}
      security:
        - oscal_auth:
            - read:ssps
  /parties:
    get:
      tags:
        - OSCAL Party
      summary: Returns all OSCAL parties
      operationId: getParties
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALParty"
      security:
        - oscal_auth:
            - read:parties
    post:
      tags:
        - OSCAL Party
      summary: Adds a new OSCAL party
      operationId: addParty
      requestBody:
        description: OSCAL party to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALParty"
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
        - oscal_auth:
            - write:parties
            - read:parties
      x-codegen-request-body-name: body
  /parties/{partyId}:
    get:
      tags:
        - OSCAL Party
      summary: Finds an OSCAL party by ID
      description: Returns a single OSCAL party
      operationId: getPartyById
      parameters:
        - name: partyId
          in: path
          description: ID of party to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OSCALParty"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Party not found
          content: {}
      security:
        - oscal_auth:
            - read:parties
    patch:
      tags:
        - OSCAL Party
      summary: Updates an existing OSCAL party
      operationId: updateParty
      parameters:
        - name: partyId
          in: path
          description: ID of party to return
          required: true
          schema:
            type: string
      requestBody:
        description: Party object to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OSCALParty"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Party not found
          content: {}
        405:
          description: Validation exception
          content: {}
        409:
          description: Conflict with current state
      security:
        - oscal_auth:
            - write:parties
            - read:parties
      x-codegen-request-body-name: body
    delete:
      tags:
        - OSCAL Party
      summary: Deletes an existing OSCAL party
      operationId: deleteParty
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: partyId
          in: path
          description: Party ID to delete
          required: true
          schema:
            type: string
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Party not found
          content: {}
      security:
        - oscal_auth:
            - write:parties
            - read:parties
  /parties/search:
    get:
      tags:
        - OSCAL Party
      summary: Searches for OSCAL party by name
      operationId: findPartiesByName
      parameters:
        - name: query
          in: query
          description: Terms to search for in party names
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OSCALParty"
        400:
          description: Invalid status value
          content: {}
      security:
        - oscal_auth:
            - read:parties
components:
  schemas:
    OSCALCatalog:
      type: object
      properties:
        catalog:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_catalog_schema.json#/definitions/assembly_oscal-catalog_catalog"
    OSCALCatalogUpdateExample:
      type: object
      properties:
        catalog:
          $ref: "#/components/schemas/OSCALPartialUpdateExample"
    OSCALProfile:
      type: object
      properties:
        profile:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_profile_schema.json#/definitions/assembly_oscal-profile_profile"
    OSCALProfileUpdateExample:
      type: object
      properties:
        profile:
          $ref: "#/components/schemas/OSCALPartialUpdateExample"
    OSCALComponentDefinition:
      type: object
      properties:
        component-definition:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_component_schema.json#/definitions/assembly_oscal-component-definition_component-definition"
    OSCALComponentDefinitionUpdateExample:
      type: object
      properties:
        component-definition:
          $ref: "#/components/schemas/OSCALPartialUpdateExample"
    OSCALComponentDefinitionComponent:
      type: object
      properties:
        component:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_component_schema.json#/definitions/assembly_oscal-component-definition_defined-component"
    OSCALComponentDefinitionComponentControlImplementation:
      type: object
      properties:
        control-implementation:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_component_schema.json#/definitions/assembly_oscal-component-definition_control-implementation"
    OSCALSsp:
      type: object
      properties:
        system-security-plan:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_ssp_schema.json#/definitions/assembly_oscal-ssp_system-security-plan"
    OSCALSspUpdateExample:
      type: object
      properties:
        system-security-plan:
          $ref: "#/components/schemas/OSCALPartialUpdateExample"
    OSCALImplementedRequirement:
      type: object
      properties:
        implemented-requirement:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_ssp_schema.json#/definitions/assembly_oscal-ssp_implemented-requirement"
    OSCALRole:
      type: object
      properties:
        role:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_catalog_schema.json#/definitions/assembly_oscal-metadata_role"
    OSCALParty:
      type: object
      properties:
        party:
          $ref:
            "https://raw.githubusercontent.com/EasyDynamics/OSCAL/json-schema-ref-by-path/json/schema/oscal_catalog_schema.json#/definitions/assembly_oscal-metadata_party"
    OSCALPartialUpdateExample:
      type: object
      properties:
        uuid:
          type: string
          pattern: "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$"
        metadata:
          type: object
          properties:
            title:
              type: string
  securitySchemes:
    oscal_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://localhost/oauth/dialog
          scopes:
            write:catalogs: modify catalogs in your account
            read:catalogs: read your catalogs
            write:profiles: modify profiles in your account
            read:profiles: read your profiles
            write:componentDefinitions: modify component definitions in your account
            read:componentDefinitions: read your component definitions
            write:ssps: modify ssps in your account
            read:ssps: read your ssps
            write:parties: modify parties in your account
            read:parties: read your parties
